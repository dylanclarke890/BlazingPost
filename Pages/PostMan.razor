@page "/post"
@using BlazingPostMan.Shared.Tab;
@inject IRequestProcessor requestProcessor
<!--
TODO:
    1. Update error UI (low priority).
-->

<h3>BlazingPostMan</h3>

<div class="form-group row">
    <label class="col-2 col-form-label" for="url-input">Enter a URL: </label>
    <input class="col-10 form-control" id="url-input" type="text" @bind="Url" />
</div>

<div class="form-group">
    <label>Request Type: </label>
    <select @bind="requestType">
        <option value="@RequestType.POST">@RequestType.POST</option>
        <option value="@RequestType.GET">@RequestType.GET</option>
        <option value="@RequestType.PUT">@RequestType.PUT</option>
        <option value="@RequestType.DELETE">@RequestType.DELETE</option>
    </select>
</div>

<div class="mt-3 mb-3">
    <h3>Preview: </h3> <span>@requestType @UrlHelper.GetUrl(Url, Params)</span><br />
</div>

<button class="btn btn-primary" @onclick="SendRequest" disabled="@sending">Send</button>

<div class="mt-3 mb-3">
    <h3>Result:</h3>
    <div>@requestResult</div>
</div>

<TabSet>
    <TabChild Title="Params">
        <UrlParameters Params="Params" OnParamAction="StateHasChanged" />
    </TabChild>
    <TabChild Title="Body">
        <BodyContent OnBodyUpdated="(b) => RequestBody = b"/>
    </TabChild>
</TabSet>

@code {
    private string Url { get; set; } = "https://localhost:44384/api/testendpoint";
    private RequestType requestType { get; set; }

    private Dictionary<string, string> Params = new() { ["test key"] = "this is a test val" };
    private Body RequestBody;

    private string requestResult;

    private bool sending = false;

    private async Task SendRequest()
    {
        sending = true;
        var result = await requestProcessor.ProcessRequest(new(Url, requestType, Params, RequestBody));
        await HandleContent(result);
        sending = false;
    }

    private async Task HandleContent(HttpResponseMessage response)
    {
        requestResult = await response.Content.ReadAsStringAsync();
    }
}

<style>
    .hand {
        cursor: pointer;
    }
</style>